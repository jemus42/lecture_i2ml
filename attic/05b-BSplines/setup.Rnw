% This file loads R packages, configures knitr options and sets preamble.Rnw as parent file

<<setup-kntir, include=FALSE>>=
library(knitr)
options(digits = 3, width = 65, str = strOptions(strict.width = "cut", vec.len = 3))

opts_chunk$set(
  error       = FALSE,
  echo        = FALSE,
  prompt      = FALSE,
  keep.source = TRUE,
  strip.white = TRUE,
  cache       = TRUE,
  tidy        = FALSE,
  message     = FALSE,
  warning     = FALSE,
  size        = 'scriptsize',
  fig.height  = 5.8,
  fig.width   = 8,
  fig.pos     = "h!",
  small.mar   = TRUE,
  eps         = FALSE,
  crop        = TRUE,
  fig.align   = "center",
  out.width   = "0.95\\textwidth"
  # fig.path    = "knit-figure/prada1-"
)
@

<<load-libraries, include = FALSE>>=
library(knitr)
library(mlbench)
library(mlr)
library(ggplot2)
library(gridExtra)
library(ggrepel)
library(data.table)
library(BBmisc)

# Day 1:
# library(HI) #not actually used?
library(party)
library(kableExtra)
library(kknn)

@




<<define-themes>>=
theme_update(axis.line = element_line(colour = "black"),
  panel.grid.major = element_line(colour = "grey80"),
  panel.grid.minor = element_line(colour = "grey80"),
  panel.border = element_blank(),
  panel.background = element_blank())

#' Plot animation over several beamer slides.
#' Important: code chunk option: results="asis"
#'
#' @param plotFunction
#'   a function that plots the i-th iteration of a series of plots
#' @param iterations
#'   Vector of integers. Iterations that should be shown in the beamer slides.
#' @examples
#'   see cim2/2017/08-boosting
plotAnimation = function(plotFunction, iterations) {
  for (i in iterations) {
    cat('\\begin{only}<', i, '>', sep = '')
    plotFunction(i)
    cat('\\end{only}')
    #cat('\n\\framebreak\n')
  }
}

library(viridis)
theme_set(theme_minimal(base_size = 17))
# theme_update(axis.line = element_line(colour = "black"),
#   panel.grid.major = element_line(colour = "grey80"),
#   panel.grid.minor = element_line(colour = "grey80"),
#   panel.border = element_blank(),
#   panel.background = element_blank())

# set default color & fill scales to viridis 
# (legible for colorblind people, prints ok in bw, legible on beamer without gold part so end = .9)
scale_c_d <- scale_colour_discrete <- scale_color_discrete <- 
  function(...) viridis::scale_color_viridis(..., end = .9, discrete = TRUE, drop = TRUE)
scale_f_d <- scale_fill_discrete <- 
  function(...) viridis::scale_fill_viridis(..., end = .9,  discrete = TRUE, drop = TRUE)
scale_c <- scale_colour_continuous <- scale_color_continuous <- 
  function(...) viridis::scale_color_viridis(..., end = .9)
scale_f <- scale_fill_continuous <- 
  function(...) viridis::scale_fill_viridis(..., end = .9)

pal_2 <- viridisLite::viridis(2, end = .9)
pal_3 <- viridisLite::viridis(3, end = .9)
pal_4 <- viridisLite::viridis(4, end = .9)
pal_5 <- viridisLite::viridis(5, end = .9)

pers_theme =   theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_line(colour = "grey80"),
        panel.grid.minor = element_line(colour = "grey80"),
        panel.border = element_blank(),
        panel.background = element_blank())
options(ggplot2.continuous.colour = "viridis",
        ggplot2.continuous.fill = "viridis")

@
