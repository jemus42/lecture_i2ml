
<<setup-child, include = FALSE>>=
library(knitr)
library(knitr)
library(mlbench)
library(mlr)
library(ggplot2)
library(gridExtra)
library(ggrepel)
library(data.table)
library(BBmisc)

set_parent("../style/preamble.Rnw")
@


% \input{../../latex-math/basic-math}


\lecturechapter{5}{Excursion: B-Splines}
\lecture{Fortgeschrittene Computerintensive Methoden}

\input{../../latex-math/basic-math}
\input{../../latex-math/basic-ml}
\input{../../latex-math/ml-trees}

\section{Splines}

\begin{vbframe}{Splines}

In this chapter we will regard a specific class of basis functions, the so-called B-splines, in detail. \vspace*{1cm}

\lz 


%\begin{center}
{\Large {\bf Special thanks to Prof. Brian Marx and Prof. Paul Eilers for providing most of the slides!!!!}}\vspace*{1cm}
%\end{center}

For an in-depth discussion of P-splines, see their new book:\medskip

P.H.C.\ Eilers and B.D.\ Marx (2020). Practical Smoothing: The Joys of P-splines. Cambridge University Press.
\framebreak

\end{vbframe}

\section{Basics of Bases}

\begin{vbframe}{Basic Linear Regression}

\begin{itemize}
  \item Scatterplot: pairs $(x_i, y_i), i = 1, \dots, m$
  \item Assumption: straight line fits data well
  \item Equation: $\mu_i = \alpha_0 + \alpha_1 \cdot x_i$
\end{itemize}

\lz

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/regressionline_intro.png}
\end{figure}


\framebreak


\begin{itemize}
  \item Least squares: minimize
  \begin{align*}
  S = \sum\limits_{i=1}^n (y_i - \alpha_0 - \alpha_1 x_i)^2 = \sum\limits_{i=1}^n (y_i - \mu_i)^2
  \end{align*}
  \item Matrix notation:
  \begin{align*}
  \mathbf{X} = \begin{bmatrix} 1 & x_1 \\ 1 & x_2 \\ \vdots & \vdots \\ 1 & x_n  \end{bmatrix}
  \quad
  \pmb\alpha = \begin{bmatrix} \alpha_0 \\ \alpha_1 \end{bmatrix}
  \quad
  \pmb\mu = \mathbf{X}\pmb\alpha
  \end{align*}
  \begin{itemize} % correct identation
   \item Minimize: 
   $$
   \|\mathbf{y} - \mathbf{X}\pmb\alpha\|^2\quad\Longrightarrow\quad \mathbf{X}^T \mathbf{X}\hat{\pmb\alpha} = \mathbf{X}^T\mathbf{y} \quad\Longrightarrow\quad \hat{\pmb\alpha} = (\mathbf{X}^T\mathbf{X})^{-1}\mathbf{X}^T\mathbf{y}
   $$
  \end{itemize}
\end{itemize}

\end{vbframe}

\begin{vbframe}{Curved Relationships}

\begin{itemize}
  \item Linear fit is not always OK
  \item Judged by eye, or after studying residuals
\end{itemize}

\lz

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/linear_fit_curved_data.png}
\end{figure}

\framebreak

\begin{itemize}

  \item Linear fit too simple? Add higher powers of $x$:
  \begin{align*}
    \mu_i = \alpha_0 + \alpha_1x_i + \alpha_2x_i^2 + \alpha_3x_i^3 + \dots
  \end{align*}
  \item More columns in matrix $\mathbf{X}$
  \begin{align*}
    \mathbf{X} =
    \begin{bmatrix}
      1 & x_1 & x_1^2 & x_1^3 & \dots & x_1^m \\
      1 & x_2 & x_2^2 & x_2^3 & \dots & x_2^m \\
      \vdots & \vdots & \vdots & \vdots & \vdots & \vdots \\
      1 & x_n & x_n^2 & x_n^3 & \dots & x_n^m \\
    \end{bmatrix}
  \end{align*}
  \begin{itemize} % correct identation
  \item Same regression equations: $\mathbf{X}^T\mathbf{X}\hat{\pmb\alpha} = \mathbf{X}^T\mathbf{y} \quad\Longrightarrow\quad \hat{\pmb\alpha} = (\mathbf{X}^T\mathbf{X})^{-1}\mathbf{X}^T\mathbf{y}$
  \end{itemize}
\end{itemize}

\end{vbframe}

\begin{vbframe}{Basis Functions}

\begin{itemize}
  \item Regression model $\pmb\mu = \mathbf{X}\pmb\alpha$
  \item Columns of $\mathbf{X}$: basis functions. Polynomial basis
  \item With sorted $\mathbf{x}$ for nice visual representation
\end{itemize}

\begin{figure}
    \centering
      \includegraphics[height = 4.5cm, width = 5.4cm]{figure_man/polynom_bases.png}
\end{figure}

\lz

\textbf{Caution}: Higher degree polynomials are numerically unstable!

\end{vbframe}

\begin{vbframe}{Example: Motorcycle Data}

\begin{itemize}
  \item Simulated crash experiment
  \item Acceleration of motorcycle helmets measured
\end{itemize}

\lz

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/motorcycle_data.png}
\end{figure}

\framebreak

\begin{itemize}
  \item High degree needed for decent curve fit
  \item Bad numerical condition (use orthogonal polynomials)
\end{itemize}

\lz

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/motorcycle_polynomial_overfit.png}
\end{figure}


\framebreak


\begin{itemize}
  \item Slight data changes can change the fit by a huge amount
  \item Longer left part (near zero)
  \item Notice wiggles
\end{itemize}

\lz

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/motorcycle_polynomial_overfit_datachange.png}
\end{figure}

\end{vbframe}

\begin{vbframe}{Trouble with Polynomials}

\begin{itemize}
  \item High degree (10 or more) may be needed
  \item Basis functions (powers of $x$) are global
  \item Moving one end (vertically) moves other end too
  \item Good fit at one end spoils things at other end
  \item Unexpected wiggles
  \item The higher the degree the more sensitive
  \item Global polynomials are a dead end
\end{itemize}

\lz

$\Longrightarrow$ Use local instead of global functions!

\end{vbframe}


\section{B-Splines}

\begin{vbframe}{B-Spline Types}

\textbf{Definition of B-Splines:}
Basis functions are only non-zero over the intervals between $d+2$ adjacent
knots, where $d$ is the degree of the basis (for example $d = 3$ for a cubic spline).
To define an $M$ parameter B-spline basis, we need to define $M + d + 1$ knots, $t_1 < t_2 < \ldots < t_{M+d+1}$,
where the interval over which the spline is to be evaluated lies within $[t_{d+1}, t_{M+1}]$ (so that
the first and last $d$ knot locations are essentially arbitrary). 
A $d$-th degree spline can then
be represented as
$$
f(x) =\sum\limits_{j=1}^M \alpha_j B_j(x;d)\,,
$$
where $\alpha_i$ are unknown spline coefficients. 

\framebreak
The $i$-th B-spline basis of degree $d$ is defined {\bf recursively} as:
$$
B_j(x;d) = \frac{x-t_j}{t_{j+d}-t_j}B_j(x;d-1) + \frac{t_{j+d+1}-x}{t_{j+d+1}-t_{j+1}}B_{j-1}(x;d-1), \,\, j=1,\ldots,M
$$
where
$$
B_j(x;0) = \begin{cases}
1, \quad \text{if}\, x\in[t_j,t_{j+1}),\\
0, \quad \text{otherwise}.
\end{cases}
$$\bigskip

More detailed information about the B-spline basis can be found for example in Eilers and Marx (1996).
\framebreak

\textbf{Linear B-Spline:}

\begin{itemize}
  \item Two pieces, each a straight line, rest zero
  \item Nicely connected at knots ($t_1$ to $t_3$): same values
  \item Slope jumps at knots
\end{itemize}

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/linear_bspline.png}
\end{figure}


\framebreak


\textbf{Quadratic B-Spline:}

\begin{itemize}
  \item Three pieces, each a quadratic segment, rest zero
  \item Nicely connected at knots ($t_1$ to $t_4$): same values and slopes
  \item Shape similar to Gaussian
\end{itemize}

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/quadratic_bspline.png}
\end{figure}


\framebreak


\textbf{Cubic B-Spline:}

\begin{itemize}
  \item Four pieces, each a cubic segment, rest zero
  \item At knots ($t_1$ to $t_5$): same values, first \& second derivatives
  \item Shape more similar to Gaussian
\end{itemize}

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/cubic_bspline.png}
\end{figure}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/cubic_bspline_set.png}
\end{figure}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/bsplines_bases.png}
\end{figure}

\end{vbframe}

\begin{vbframe}{B-Splines in Action}

\begin{itemize}
  \item Basis matrix $\mathbf{B}$
  \item Columns are B-splines
  \begin{align*}
  \begin{bmatrix}
  B_1(x_1) & B_2(x_1) & B_3(x_1) & \dots & B_M(x_1) \\
  B_1(x_2) & B_2(x_2) & B_3(x_2) & \dots & B_M(x_2) \\
  \vdots & \vdots & \vdots & \vdots & \vdots \\
  B_1(x_n) & B_2(x_n) & B_3(x_n) & \dots & B_M(x_n)
  \end{bmatrix}
  \end{align*}
  \item In each row only a few non-zero elements (degree plus one)
  \item Only a few basis functions contribute to $\mu_i =\sum b_{ij}\alpha_j = \mathbf{B}^T_{i\cdot}\pmb\alpha$
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/bspline_ripple.png}
\end{figure}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/bsplines_motorcycle.png}
\end{figure}


\framebreak


\begin{itemize}
  \item B-splines are local functions, look like Gaussian
  \item B-splines are columns of basis matrix $\mathbf{B}$
  \item Scaling and summing gives fitted values: $\pmb\mu = \mathbf{B}\pmb\alpha$
  \item The knots determine the B-spline basis
  \item Polynomial pieces make up B-splines, join at knots
  \item General patterns of knots are possible
  \item We consider only \textbf{equal-spacing}
  \item Number of knots determines width and number of B-splines
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/number_bsplines.png}
\end{figure}

\end{vbframe}

\section{P-Splines}

\begin{vbframe}{Smoothness and Roughness}

\begin{itemize}
  \item More B-splines in basis: more detail is possible
  \item But it is not necessary!
  \item Perfectly smooth curves $\pmb\mu = \mathbf{B}\pmb\alpha$ are possible
  \item It all depends on $\pmb\alpha$
  \item P-spline idea: control smoothness of $\pmb\alpha$
  \item Introduce a penalty on roughness of $\pmb\alpha$
  \item While using a \enquote{rich} B-spline basis
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/smoothness.png}
\end{figure}


\framebreak


\begin{itemize}
  \item The coefficients determine roughness
  \item High roughness: $\pmb\alpha$ erratic
  \item Little roughness: smoothly varying $\pmb\alpha$
  \item Simple numerical measure:
  \begin{align*}
  R = \sum\limits_{j = 2}^M (\alpha_j - \alpha_{j-1})^2
  \end{align*}
  \item Or RMS “change to neighbor”: $r = \sqrt{R/(M - 1)}$
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/roughness_measured.png}
\end{figure}

\end{vbframe}


\begin{vbframe}{Differences and Matrices}

\begin{itemize}
  \item We are interested in $\Delta\pmb\alpha = (\alpha_2 - \alpha_{1},\ldots,\alpha_M - \alpha_{M-1})$
  \item Special matrix makes life easy:
  \begin{align*}
\Delta\pmb\alpha = \mathbf{D}\pmb\alpha; \quad\mathbf{D} =
\begin{bmatrix}
-1 &1 &0 &0\\
0 &-1 &1 &0\\
0 &0 &-1 &1\\
\end{bmatrix}
  \end{align*}
  \item $\mathbf{D}$ has $M - 1$ rows, $M$ columns
\end{itemize}

\end{vbframe}


\begin{vbframe}{Roughness with a Matrix}

\begin{itemize}
  \item Roughness measure $R$:
  \begin{align*} R = ||\Delta\pmb\alpha||^2 = ||\mathbf{D}\pmb\alpha||^2 = \pmb\alpha^T\mathbf{D}^T\mathbf{D}\pmb\alpha \end{align*}
  \item Matrix $\mathbf{D}$ easily computed
  \item (In R: \texttt{D <- diff(diag(M))})
  \item So we have easy tool to express roughness
\end{itemize}

\end{vbframe}


\begin{vbframe}{Penalizing Least Squares}

\begin{itemize}
  \item We set a double goal:
  \begin{itemize}
    \item good fit to the data: low $S = ||\mathbf{y} - \mathbf{B}\pmb\alpha||^2$
    \item smooth curve, i.e.\ low roughness: $R = ||\mathbf{D}\pmb\alpha||^2$
  \end{itemize}
  \item Balance of the two in one function ($\lambda > 0$):
  \begin{align*}
  Q = S + \lambda R = ||\mathbf{y} - \mathbf{B}\pmb\alpha||^2 + \lambda||\mathbf{D}\pmb\alpha||^2
  \end{align*}
  \item Last term known as penalty
  \item $\lambda$ is smoothing (or penalty or regularization) parameter
  \item User sets $\lambda$ (for now, automatic choice later)
  \item Penalized least squares
\end{itemize}


\framebreak


\begin{itemize}
  \item Minimize
  \begin{align*}
  Q &= S + \lambda R = ||\mathbf{y} - \mathbf{B}\pmb\alpha||^2 + \lambda||\mathbf{D}\pmb\alpha||^2 \\
    &= \mathbf{y}^T\mathbf{y} - 2\pmb\alpha^T\mathbf{B}^T\mathbf{y} + \pmb\alpha^T(\mathbf{B}^T\mathbf{B} + \lambda \mathbf{D}^T\mathbf{D})\pmb\alpha
  \end{align*}
  \item Set derivative w.r.t. $\pmb\alpha$ zero; result:
  \begin{align*}
  (\mathbf{B}^T\mathbf{B} + \lambda \mathbf{D}^T\mathbf{D})\pmb\alpha = \mathbf{B}^T\mathbf{y} \,\Longrightarrow\, \hat{\pmb\alpha} = (\mathbf{B}^T\mathbf{B} + \lambda \mathbf{D}^T\mathbf{D})^{-1}\mathbf{B}^T\mathbf{y}
  \end{align*}
  \item Small modification of $\mathbf{B}^T\mathbf{B}\pmb\alpha = \mathbf{B}^T\mathbf{y}$
  %\item We provide R function: \texttt{psNormal( )}
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/smooth_rough.png}
\end{figure}

\end{vbframe}


\begin{vbframe}{Higher Order Differences}

\begin{itemize}
  \item First order: $\Delta\pmb\alpha = (\alpha_2 - \alpha_{1},\ldots,\alpha_M - \alpha_{M-1})$
  \item Second order: $\Delta(\Delta\pmb\alpha) = \Delta^2\pmb\alpha$
  \begin{align*}
  \Delta^2\pmb\alpha & = \left[(\alpha_j - \alpha_{j-1}) - (\alpha_{j-1} - \alpha_{j-2})\right]_{j=3,\ldots,M}\\
  & = \left[(\alpha_j - 2\alpha_{j-1} + \alpha_{j-2})\right]_{j=3,\ldots,M}
  \end{align*}
  \item Matrix in R: \texttt{D <- diff(diag(M), diff = 2)}
  \begin{align*}
  \mathbf{D}_2 = \begin{bmatrix}
  1 &-2 &1 &0 &0\\
  0 &1 &-2 &1 &0\\
  0 &0 &1 &-2 &1
  \end{bmatrix}
  \end{align*}
\end{itemize}


\framebreak


\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/second_order.png}
\end{figure}


\framebreak


\begin{itemize}
  \item Third order
  \begin{align*}
  \Delta^3\pmb\alpha = \left[(\alpha_j - 3\alpha_{j-1} + 3\alpha_{j-2} - \alpha_{j-3})\right]_{j=4,\ldots,M}
  \end{align*}
  \item Matrix
  \begin{align*}
  \mathbf{D}_3 =
  \begin{bmatrix}
  -1 &3 &-3 &1 &0 &0\\
  0 &-1 &3 &-3 &1 &0\\
  0 &0 &-1 &3 &-3 &1
  \end{bmatrix}
  \end{align*}
  \item In R: \texttt{D <- diff(diag(M), diff = 3)}
\end{itemize}

\end{vbframe}

\begin{vbframe}{Interpolation without a Penalty}

\begin{itemize}
  \item Interpolation with B-splines
  \begin{itemize}
    \item fit B-splines by regression: $\hat{\mathbf{y}} = \mathbf{B}\hat{\pmb\alpha}$
    \item compute B-splines at new $\tilde{x}: \mathbf{B}_j(\tilde{x}), j = 1 \dots M$
    \item $\mu(\tilde{x}) = \sum_j \mathbf{B}_j(\tilde{x})\hat{\pmb\alpha}$
  \end{itemize}
  \item Works fine if you can estimate $\pmb\alpha$
  \item Regression may fail with large gaps in $x$
  \item Then some B-splines have no support
  \item Singular system of equations
\end{itemize}

\end{vbframe}

\begin{vbframe}{Interpolation with a Penalty}

\begin{itemize}
  \item Penalty lets elements of $\pmb\alpha$ hold hands
  \item They bridge the gap(s) automatically!
\end{itemize}

\begin{figure}
    \centering
      \includegraphics[height = 5.0cm, width = 6.0cm]{figure_man/datagap.png}
\end{figure}

\end{vbframe}

\begin{vbframe}{Extrapolation}

\begin{itemize}
  \item Extrapolation works the same
  \item Just choose the domain of $x$ wide enough
  \item Take a generous number of (cubic) B-splines
  \item Penalty again bridges the gap
  \item Smooth fit and neat extrapolation automatically
  % \item Interpolation (of coefficients): polynomial of degree $2d - 1$
  % \item Extrapolation (of coefficients): polynomial of degree $d - 1$
  \item With differences of order d in penalty
\end{itemize}

\end{vbframe}


\begin{vbframe}{Inter- and Extrapolation}
 with $d = 1$
\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/inter_extra_d1.png}
\end{figure}

\end{vbframe}


\begin{vbframe}{Inter- and Extrapolation}
 with $d = 2$
\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/inter_extra_d2.png}
\end{figure}

\end{vbframe}


\begin{vbframe}{Inter- and Extrapolation}
 with $d = 3$
\begin{figure}
    \centering
      \includegraphics[height = 7.0cm, width = 8.5cm]{figure_man/inter_extra_d3.png}
\end{figure}

\end{vbframe}

\begin{vbframe}{Strong Smoothing}

\textbf{Example} ($\lambda = 10^6$):

\begin{figure}
    \centering
      \includegraphics[height = 6.5cm, width = 8.0cm]{figure_man/strong_smooth.png}
\end{figure}

\end{vbframe}

\begin{vbframe}{Wrap-Up}

\vspace{2cm}

\begin{itemize}
  \item Basis with many B-splines allows detail
  \item But smoothness depends on coefficients $\pmb\alpha$ in $\mathbf{B}\pmb\alpha$
  \item Difference penalty on $\pmb\alpha$ to tune smoothness
  \item P-splines allow flexible interpolation and extrapolation
\end{itemize}

\end{vbframe}

% \begin{frame}[plain,noframenumbering]
% \vfill
% \centering
% End of lecture
% 
% \lz
% 
% Splines
% \vfill
% \end{frame}

\endlecture
