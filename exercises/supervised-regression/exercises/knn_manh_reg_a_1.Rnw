%x <- c(4,7,9,4,6,7,9,7,8)
%y <- c(6,3,8,9,5,8,7,6,5)
%z <- as.factor(c(1,1,1,0,0,0,0,2,1))

Let the 2D feature vectors in the following figure be with two different numeric target values (2 and 4). Predict the point (7,6) - represented by the grey point in the picture - with the k-nearest neighbor method. Distance function should be the $L_1$ norm (Manhattan distance):

$$d_\text{manhattan}(x, \tilde{x}) = \sum_{j=1}^p |x_j - \tilde{x}_j|$$

State as the prediction the unweighted and the weighted (according to the Manhattan distance) mean of the values of the k-nearest neighbors.

\begin{itemize}
  \item[a)] $k = 3$
  \item[b)] $k = 5$
  \item[c)] $k = 7$
\end{itemize}

%d3 = c(5,7,9,7)
%v3 = c(6,8,6,4)

%d5 = c(4,7,10,7)
%v5 = c(6,9,6,3)

%d7 = c(3,7,10,10,7)
%v7 = c(6,10,7,5,2)



<<echo=FALSE, message=FALSE, fig.align="center", fig.height = 4, fig.width=5>>=
x <- c(4,7,9,4,6,7,9,7,8)
y <- c(6,3,8,9,5,8,7,6,5)
z <- as.factor(c(5,5,5,3,3,3,3,NA,5))

d3 = c(5,7,9,7)
v3 = c(6,8,6,4)

d5 = c(4,7,10,7)
v5 = c(6,9,6,3)

d7 = c(3,7,10,10,7)
v7 = c(6,10,7,5,2)

require(ggplot2)
qplot(x, y,size=I(6),col=z)+
scale_x_continuous(minor_breaks = seq(0, 10, by = 1),breaks = seq(0, 10, by = 1),limits=c(0,10)) +
scale_y_continuous(minor_breaks = seq(0, 10, by = 1),breaks = seq(0, 10, by = 1),limits=c(0,10))  + 
  scale_colour_discrete(name = "values", labels = c("2", "4", "?"))
#+ annotate("polygon", x=d7,y=v7, alpha=0.2, fill="red")
@
